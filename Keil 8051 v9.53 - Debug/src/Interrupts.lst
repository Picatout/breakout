C51 COMPILER V9.53.0.0   INTERRUPTS                                                        01/03/2018 16:51:57 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Jacques
                    -\SimplicityStudio\v4_workspace\BBchip8\src\Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFU
                    -ZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Jacques\SimplicityStudio\v4_worksp
                    -ace\BBchip8\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/shared/si8051base;C:/SiliconLabs/S
                    -implicityStudio/v4/developer/sdks/8051/v4.1.0//Device/EFM8BB1/inc) PRINT(.\src\Interrupts.lst) COND CODE PAGEWIDTH(120) 
                    -PAGELENGTH(65) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interrupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          
  12          //-----------------------------------------------------------------------------
  13          // TIMER0_ISR
  14          //-----------------------------------------------------------------------------
  15          //
  16          // TIMER0 ISR Content goes here. Remember to clear flag bits:
  17          // TCON::TF0 (Timer 0 Overflow Flag)
  18          //
  19          //-----------------------------------------------------------------------------
  20          SI_INTERRUPT (TIMER0_ISR, TIMER0_IRQn)
  21          {
  22   1              TCON_TF0=0;
  23   1              P0_B3=0;
  24   1      
  25   1      }
  26          
  27          xdata unsigned  char video[256];
  28          //-----------------------------------------------------------------------------
  29          // PCA0_ISR
  30          //-----------------------------------------------------------------------------
  31          //
  32          // PCA0 ISR Content goes here. Remember to clear flag bits:
  33          // PCA0CN0::CCF0 (PCA Module 0 Capture/Compare Flag)
  34          // PCA0CN0::CCF1 (PCA Module 1 Capture/Compare Flag)
  35          // PCA0CN0::CCF2 (PCA Module 2 Capture/Compare Flag)
  36          // PCA0CN0::CF (PCA Counter/Timer Overflow Flag)
  37          // PCA0PWM::COVF (Cycle Overflow Flag)
  38          //
  39          //-----------------------------------------------------------------------------
  40          SI_INTERRUPT (PCA0_ISR, PCA0_IRQn)
  41          {
  42   1              char i;
  43   1              unsigned char *ln;
  44   1      
  45   1              static int line_count=0;
  46   1              static unsigned char f_even=0;
  47   1          static unsigned char f_video=0;
  48   1      
  49   1              if (PCA0CN0_CCF0){
  50   2                      PCA0CN0_CCF0=0;
  51   2                      P0_B2=0;
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        01/03/2018 16:51:57 PAGE 2   

  52   2                      line_count++;
  53   2                      if (f_even && (line_count==262)){
  54   3                              line_count=0;
  55   3                              f_even^=1;
  56   3                      }
  57   2                      if (!f_even && (line_count==263)){
  58   3                              line_count=0;
  59   3                              f_even^=1;
  60   3                      }
  61   2                      P0_B4=0;
  62   2      //              if ((line_count==262)){
  63   2      //                      PCA0CP0+=200;
  64   2      //              }else{
  65   2                              PCA0CP0+=400;
  66   2      //              }
  67   2              }else if (PCA0CN0_CCF1){
  68   2                      PCA0CN0_CCF1=0;
  69   2                      PCA0CP1+=400;
  70   2                      switch(line_count){
  71   3                      case 1:
  72   3                      case 2:
  73   3                      case 3:
  74   3                              break;
  75   3                      case 40:
  76   3                              f_video=1;
  77   3                              P0_B4=1;
  78   3                              break;
  79   3                      case 232:
  80   3                              f_video=0;
  81   3                      default:
  82   3                              P0_B4=1;
  83   3                      }//switch
  84   2      
  85   2              }else if (PCA0CN0_CCF2){
  86   2                      PCA0CN0_CCF2=0;
  87   2                      PCA0CP2+=400;
  88   2                      if (f_video){
  89   3                              ln=&video[(line_count-40)/6*8];
  90   3                              for (i=0;i<8;i++){
  91   4                                      SPI0DAT= *ln++;
  92   4                                      while (!(SPI0CN0&SPI0CN0_TXBMT__BMASK));
  93   4                              }
  94   3                              SPI0DAT=0;
  95   3                      }
  96   2              }
  97   1      }
  98          
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        01/03/2018 16:51:57 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION TIMER0_ISR (BEGIN)
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 22
0000 C28D              CLR     TCON_TF0
                                           ; SOURCE LINE # 23
0002 C283              CLR     P0_B3
                                           ; SOURCE LINE # 25
0004 32                RETI    
             ; FUNCTION TIMER0_ISR (END)

             ; FUNCTION PCA0_ISR (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 49
001D 30D84B            JNB     PCA0CN0_CCF0,?C0002
                                           ; SOURCE LINE # 50
0020 C2D8              CLR     PCA0CN0_CCF0
                                           ; SOURCE LINE # 51
0022 C282              CLR     P0_B2
                                           ; SOURCE LINE # 52
0024 0500        R     INC     line_count+01H
0026 E500        R     MOV     A,line_count+01H
0028 7002              JNZ     ?C0023
002A 0500        R     INC     line_count
002C         ?C0023:
                                           ; SOURCE LINE # 53
002C E500        R     MOV     A,f_even
002E 6013              JZ      ?C0003
0030 E500        R     MOV     A,line_count+01H
0032 B4060E            CJNE    A,#06H,?C0003
0035 E500        R     MOV     A,line_count
0037 B40109            CJNE    A,#01H,?C0003
                                           ; SOURCE LINE # 54
003A 750000      R     MOV     line_count,#00H
003D 750000      R     MOV     line_count+01H,#00H
                                           ; SOURCE LINE # 55
0040 630001      R     XRL     f_even,#01H
                                           ; SOURCE LINE # 56
0043         ?C0003:
                                           ; SOURCE LINE # 57
0043 E500        R     MOV     A,f_even
0045 7013              JNZ     ?C0004
0047 E500        R     MOV     A,line_count+01H
0049 B4070E            CJNE    A,#07H,?C0004
004C E500        R     MOV     A,line_count
004E B40109            CJNE    A,#01H,?C0004
                                           ; SOURCE LINE # 58
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        01/03/2018 16:51:57 PAGE 4   

0051 750000      R     MOV     line_count,#00H
0054 750000      R     MOV     line_count+01H,#00H
                                           ; SOURCE LINE # 59
0057 630001      R     XRL     f_even,#01H
                                           ; SOURCE LINE # 60
005A         ?C0004:
                                           ; SOURCE LINE # 61
005A C284              CLR     P0_B4
                                           ; SOURCE LINE # 65
005C 7490              MOV     A,#090H
005E 25FB              ADD     A,PCA0CP0
0060 F5FB              MOV     PCA0CP0,A
0062 7401              MOV     A,#01H
0064 35FC              ADDC    A,PCA0CP0+01H
0066 F5FC              MOV     PCA0CP0+01H,A
                                           ; SOURCE LINE # 67
0068 020000      R     LJMP    ?C0022
006B         ?C0002:
006B 30D92F            JNB     PCA0CN0_CCF1,?C0006
                                           ; SOURCE LINE # 68
006E C2D9              CLR     PCA0CN0_CCF1
                                           ; SOURCE LINE # 69
0070 7490              MOV     A,#090H
0072 25E9              ADD     A,PCA0CP1
0074 F5E9              MOV     PCA0CP1,A
0076 7401              MOV     A,#01H
0078 35EA              ADDC    A,PCA0CP1+01H
007A F5EA              MOV     PCA0CP1+01H,A
                                           ; SOURCE LINE # 70
007C E500        R     MOV     A,line_count
007E 7019              JNZ     ?C0013
0080 E500        R     MOV     A,line_count+01H
0082 14                DEC     A
0083 24FD              ADD     A,#0FDH
0085 5074              JNC     ?C0022
0087 241C              ADD     A,#01CH
0089 600B              JZ      ?C0012
008B 24C0              ADD     A,#0C0H
008D 700A              JNZ     ?C0013
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
008F         ?C0011:
                                           ; SOURCE LINE # 76
008F 750001      R     MOV     f_video,#01H
                                           ; SOURCE LINE # 77
0092 D284              SETB    P0_B4
                                           ; SOURCE LINE # 78
0094 8065              SJMP    ?C0022
                                           ; SOURCE LINE # 79
0096         ?C0012:
                                           ; SOURCE LINE # 80
0096 750000      R     MOV     f_video,#00H
                                           ; SOURCE LINE # 81
0099         ?C0013:
                                           ; SOURCE LINE # 82
0099 D284              SETB    P0_B4
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 85
009B 805E              SJMP    ?C0022
009D         ?C0006:
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        01/03/2018 16:51:57 PAGE 5   

009D 30DA5B            JNB     PCA0CN0_CCF2,?C0022
                                           ; SOURCE LINE # 86
00A0 C2DA              CLR     PCA0CN0_CCF2
                                           ; SOURCE LINE # 87
00A2 7490              MOV     A,#090H
00A4 25EB              ADD     A,PCA0CP2
00A6 F5EB              MOV     PCA0CP2,A
00A8 7401              MOV     A,#01H
00AA 35EC              ADDC    A,PCA0CP2+01H
00AC F5EC              MOV     PCA0CP2+01H,A
                                           ; SOURCE LINE # 88
00AE E500        R     MOV     A,f_video
00B0 6049              JZ      ?C0022
                                           ; SOURCE LINE # 89
00B2 E500        R     MOV     A,line_count+01H
00B4 24D8              ADD     A,#0D8H
00B6 FF                MOV     R7,A
00B7 E500        R     MOV     A,line_count
00B9 34FF              ADDC    A,#0FFH
00BB FE                MOV     R6,A
00BC 7C00              MOV     R4,#00H
00BE 7D06              MOV     R5,#06H
00C0 120000      E     LCALL   ?C?SIDIV
00C3 EF                MOV     A,R7
00C4 7803              MOV     R0,#03H
00C6         ?C0026:
00C6 C3                CLR     C
00C7 33                RLC     A
00C8 CE                XCH     A,R6
00C9 33                RLC     A
00CA CE                XCH     A,R6
00CB D8F9              DJNZ    R0,?C0026
00CD 2400        R     ADD     A,#LOW video
00CF F9                MOV     R1,A
00D0 7400        R     MOV     A,#HIGH video
00D2 3E                ADDC    A,R6
00D3 750001      R     MOV     ln,#01H
00D6 F500        R     MOV     ln+01H,A
00D8 8900        R     MOV     ln+02H,R1
                                           ; SOURCE LINE # 90
;---- Variable 'i' assigned to Register 'R7' ----
00DA E4                CLR     A
00DB FF                MOV     R7,A
00DC         ?C0017:
                                           ; SOURCE LINE # 91
00DC AB00        R     MOV     R3,ln
00DE 0500        R     INC     ln+02H
00E0 E500        R     MOV     A,ln+02H
00E2 AA00        R     MOV     R2,ln+01H
00E4 7002              JNZ     ?C0027
00E6 0500        R     INC     ln+01H
00E8         ?C0027:
00E8 14                DEC     A
00E9 F9                MOV     R1,A
00EA 120000      E     LCALL   ?C?CLDPTR
00ED F5A3              MOV     SPI0DAT,A
00EF         ?C0020:
                                           ; SOURCE LINE # 92
00EF E5F8              MOV     A,SPI0CN0
00F1 30E1FB            JNB     ACC.1,?C0020
00F4         ?C0021:
                                           ; SOURCE LINE # 93
00F4         ?C0019:
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        01/03/2018 16:51:57 PAGE 6   

00F4 0F                INC     R7
00F5 BF08E4            CJNE    R7,#08H,?C0017
00F8         ?C0018:
                                           ; SOURCE LINE # 94
00F8 75A300            MOV     SPI0DAT,#00H
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
00FB         ?C0022:
00FB D007              POP     AR7
00FD D006              POP     AR6
00FF D005              POP     AR5
0101 D004              POP     AR4
0103 D003              POP     AR3
0105 D002              POP     AR2
0107 D001              POP     AR1
0109 D000              POP     AR0
010B D0D0              POP     PSW
010D D082              POP     DPL
010F D083              POP     DPH
0111 D0F0              POP     B
0113 D0E0              POP     ACC
0115 32                RETI    
             ; FUNCTION PCA0_ISR (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    289    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    256    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
