C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Jacques
                    -\SimplicityStudio\v4_workspace\BBchip8\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFU
                    -ZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Jacques\SimplicityStudio\v4_worksp
                    -ace\BBchip8\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/shared/si8051base;C:/SiliconLabs/S
                    -implicityStudio/v4/developer/sdks/8051/v4.1.0//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND CODE PAGEWIDTH(120) 
                    -PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_1_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              CLOCK_0_enter_DefaultMode_from_RESET();
  29   1              TIMER01_0_enter_DefaultMode_from_RESET();
  30   1              TIMER16_2_enter_DefaultMode_from_RESET();
  31   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  32   1              PCA_0_enter_DefaultMode_from_RESET();
  33   1              PCACH_0_enter_DefaultMode_from_RESET();
  34   1              PCACH_1_enter_DefaultMode_from_RESET();
  35   1              PCACH_2_enter_DefaultMode_from_RESET();
  36   1              SPI_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // [Config Calls]$
  39   1      
  40   1      }
  41          
  42          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  43   1              // $[WDTCN - Watchdog Timer Control]
  44   1              //Disable Watchdog with key sequence
  45   1              WDTCN = 0xDE; //First key
  46   1              WDTCN = 0xAD; //Second key
  47   1              // [WDTCN - Watchdog Timer Control]$
  48   1      
  49   1      }
  50          
  51          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 2   

  52   1              // $[P0 - Port 0 Pin Latch]
  53   1              // [P0 - Port 0 Pin Latch]$
  54   1      
  55   1              // $[P0MDOUT - Port 0 Output Mode]
  56   1              /***********************************************************************
  57   1               - P0.0 output is push-pull
  58   1               - P0.1 output is open-drain
  59   1               - P0.2 output is push-pull
  60   1               - P0.3 output is open-drain
  61   1               - P0.4 output is push-pull
  62   1               - P0.5 output is open-drain
  63   1               - P0.6 output is open-drain
  64   1               - P0.7 output is push-pull
  65   1               ***********************************************************************/
  66   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__OPEN_DRAIN
  67   1                              | P0MDOUT_B2__PUSH_PULL | P0MDOUT_B3__OPEN_DRAIN
  68   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  69   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__PUSH_PULL;
  70   1              // [P0MDOUT - Port 0 Output Mode]$
  71   1      
  72   1              // $[P0MDIN - Port 0 Input Mode]
  73   1              // [P0MDIN - Port 0 Input Mode]$
  74   1      
  75   1              // $[P0SKIP - Port 0 Skip]
  76   1              /***********************************************************************
  77   1               - P0.0 pin is not skipped by the crossbar
  78   1               - P0.1 pin is not skipped by the crossbar
  79   1               - P0.2 pin is not skipped by the crossbar
  80   1               - P0.3 pin is skipped by the crossbar
  81   1               - P0.4 pin is skipped by the crossbar
  82   1               - P0.5 pin is skipped by the crossbar
  83   1               - P0.6 pin is skipped by the crossbar
  84   1               - P0.7 pin is skipped by the crossbar
  85   1               ***********************************************************************/
  86   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
  87   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED
  88   1                              | P0SKIP_B5__SKIPPED | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
  89   1              // [P0SKIP - Port 0 Skip]$
  90   1      
  91   1              // $[P0MASK - Port 0 Mask]
  92   1              // [P0MASK - Port 0 Mask]$
  93   1      
  94   1              // $[P0MAT - Port 0 Match]
  95   1              // [P0MAT - Port 0 Match]$
  96   1      
  97   1      }
  98          
  99          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 100   1              // $[P1 - Port 1 Pin Latch]
 101   1              // [P1 - Port 1 Pin Latch]$
 102   1      
 103   1              // $[P1MDOUT - Port 1 Output Mode]
 104   1              // [P1MDOUT - Port 1 Output Mode]$
 105   1      
 106   1              // $[P1MDIN - Port 1 Input Mode]
 107   1              // [P1MDIN - Port 1 Input Mode]$
 108   1      
 109   1              // $[P1SKIP - Port 1 Skip]
 110   1              /***********************************************************************
 111   1               - P1.0 pin is skipped by the crossbar
 112   1               - P1.1 pin is skipped by the crossbar
 113   1               - P1.2 pin is skipped by the crossbar
 114   1               - P1.3 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 3   

 115   1               ***********************************************************************/
 116   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 117   1                              | P1SKIP_B3__SKIPPED;
 118   1              // [P1SKIP - Port 1 Skip]$
 119   1      
 120   1              // $[P1MASK - Port 1 Mask]
 121   1              // [P1MASK - Port 1 Mask]$
 122   1      
 123   1              // $[P1MAT - Port 1 Match]
 124   1              // [P1MAT - Port 1 Match]$
 125   1      
 126   1      }
 127          
 128          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 129   1              // $[XBR2 - Port I/O Crossbar 2]
 130   1              /***********************************************************************
 131   1               - Weak Pullups disabled
 132   1               - Crossbar enabled
 133   1               ***********************************************************************/
 134   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_DISABLED | XBR2_XBARE__ENABLED;
 135   1              // [XBR2 - Port I/O Crossbar 2]$
 136   1      
 137   1              // $[PRTDRV - Port Drive Strength]
 138   1              // [PRTDRV - Port Drive Strength]$
 139   1      
 140   1              // $[XBR0 - Port I/O Crossbar 0]
 141   1              /***********************************************************************
 142   1               - UART I/O unavailable at Port pin
 143   1               - SPI I/O routed to Port pins
 144   1               - SMBus 0 I/O unavailable at Port pins
 145   1               - CP0 unavailable at Port pin
 146   1               - Asynchronous CP0 unavailable at Port pin
 147   1               - CP1 unavailable at Port pin
 148   1               - Asynchronous CP1 unavailable at Port pin
 149   1               - SYSCLK unavailable at Port pin
 150   1               ***********************************************************************/
 151   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 152   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 153   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 154   1              // [XBR0 - Port I/O Crossbar 0]$
 155   1      
 156   1              // $[XBR1 - Port I/O Crossbar 1]
 157   1              // [XBR1 - Port I/O Crossbar 1]$
 158   1      
 159   1      }
 160          
 161          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 162   1              // $[CLKSEL - Clock Select]
 163   1              /***********************************************************************
 164   1               - Clock derived from the External CMOS clock circuit
 165   1               - SYSCLK is equal to selected clock source divided by 1
 166   1               ***********************************************************************/
 167   1              CLKSEL = CLKSEL_CLKSL__EXTOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 168   1              // [CLKSEL - Clock Select]$
 169   1      
 170   1      }
 171          
 172          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 173   1              // $[PCA Off]
 174   1              PCA0CN0_CR = PCA0CN0_CR__STOP;
 175   1              // [PCA Off]$
 176   1      
 177   1              // $[PCA0MD - PCA Mode]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 4   

 178   1              /***********************************************************************
 179   1               - PCA continues to function normally while the system controller is in
 180   1               Idle Mode
 181   1               - Disable the CF interrupt
 182   1               - System clock divided by 4
 183   1               ***********************************************************************/
 184   1              PCA0MD = PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED
 185   1                              | PCA0MD_CPS__SYSCLK_DIV_4;
 186   1              // [PCA0MD - PCA Mode]$
 187   1      
 188   1              // $[PCA0CENT - PCA Center Alignment Enable]
 189   1              // [PCA0CENT - PCA Center Alignment Enable]$
 190   1      
 191   1              // $[PCA0CLR - PCA Comparator Clear Control]
 192   1              // [PCA0CLR - PCA Comparator Clear Control]$
 193   1      
 194   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 195   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 196   1      
 197   1              // $[PCA0H - PCA Counter/Timer High Byte]
 198   1              // [PCA0H - PCA Counter/Timer High Byte]$
 199   1      
 200   1              // $[PCA0POL - PCA Output Polarity]
 201   1              // [PCA0POL - PCA Output Polarity]$
 202   1      
 203   1              // $[PCA0PWM - PCA PWM Configuration]
 204   1              // [PCA0PWM - PCA PWM Configuration]$
 205   1      
 206   1              // $[PCA On]
 207   1              PCA0CN0_CR = PCA0CN0_CR__RUN;
 208   1              // [PCA On]$
 209   1      
 210   1      }
 211          
 212          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 213   1              // $[PCA0 Settings Save]
 214   1              // Select Capture/Compare register)
 215   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 216   1              // [PCA0 Settings Save]$
 217   1      
 218   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 219   1              /***********************************************************************
 220   1               - Disable negative edge capture
 221   1               - Enable a Capture/Compare Flag interrupt request when CCF0 is set
 222   1               - Enable match function
 223   1               - 8 to 11-bit PWM selected
 224   1               - Disable positive edge capture
 225   1               - Enable comparator function
 226   1               - Disable PWM function
 227   1               - Disable toggle function
 228   1               ***********************************************************************/
 229   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__ENABLED
 230   1                              | PCA0CPM0_MAT__ENABLED | PCA0CPM0_PWM16__8_BIT
 231   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 232   1                              | PCA0CPM0_PWM__DISABLED | PCA0CPM0_TOG__DISABLED;
 233   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 234   1      
 235   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 236   1              /***********************************************************************
 237   1               - PCA Channel 0 Capture Module Low Byte = 0x90
 238   1               ***********************************************************************/
 239   1              PCA0CPL0 = (0x90 << PCA0CPL0_PCA0CPL0__SHIFT);
 240   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 5   

 241   1      
 242   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 243   1              /***********************************************************************
 244   1               - PCA Channel 0 Capture Module High Byte = 0x01
 245   1               ***********************************************************************/
 246   1              PCA0CPH0 = (0x01 << PCA0CPH0_PCA0CPH0__SHIFT);
 247   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 248   1      
 249   1              // $[Auto-reload]
 250   1              // [Auto-reload]$
 251   1      
 252   1              // $[PCA0 Settings Restore]
 253   1              // [PCA0 Settings Restore]$
 254   1      
 255   1      }
 256          
 257          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 258   1              // $[SPI0CKR - SPI0 Clock Rate]
 259   1              /***********************************************************************
 260   1               - SPI0 Clock Rate = 0x07
 261   1               ***********************************************************************/
 262   1              SPI0CKR = (0x07 << SPI0CKR_SPI0CKR__SHIFT);
 263   1              // [SPI0CKR - SPI0 Clock Rate]$
 264   1      
 265   1              // $[SPI0CFG - SPI0 Configuration]
 266   1              /***********************************************************************
 267   1               - Enable master mode. Operate as a master
 268   1               ***********************************************************************/
 269   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 270   1              // [SPI0CFG - SPI0 Configuration]$
 271   1      
 272   1              // $[SPI0CN0 - SPI0 Control]
 273   1              /***********************************************************************
 274   1               - Enable the SPI module
 275   1               - 3-Wire Slave or 3-Wire Master Mode
 276   1               ***********************************************************************/
 277   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 278   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 279   1              // [SPI0CN0 - SPI0 Control]$
 280   1      
 281   1      }
 282          
 283          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 284   1              // $[Timer Initialization]
 285   1              //Save Timer Configuration
 286   1              uint8_t TCON_save;
 287   1              TCON_save = TCON;
 288   1              //Stop Timers
 289   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 290   1      
 291   1              // [Timer Initialization]$
 292   1      
 293   1              // $[TH0 - Timer 0 High Byte]
 294   1              /***********************************************************************
 295   1               - Timer 0 High Byte = 0xFE
 296   1               ***********************************************************************/
 297   1              TH0 = (0xFE << TH0_TH0__SHIFT);
 298   1              // [TH0 - Timer 0 High Byte]$
 299   1      
 300   1              // $[TL0 - Timer 0 Low Byte]
 301   1              /***********************************************************************
 302   1               - Timer 0 Low Byte = 0x70
 303   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 6   

 304   1              TL0 = (0x70 << TL0_TL0__SHIFT);
 305   1              // [TL0 - Timer 0 Low Byte]$
 306   1      
 307   1              // $[TH1 - Timer 1 High Byte]
 308   1              // [TH1 - Timer 1 High Byte]$
 309   1      
 310   1              // $[TL1 - Timer 1 Low Byte]
 311   1              // [TL1 - Timer 1 Low Byte]$
 312   1      
 313   1              // $[Timer Restoration]
 314   1              //Restore Timer Configuration
 315   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 316   1      
 317   1              // [Timer Restoration]$
 318   1      
 319   1      }
 320          
 321          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 322   1              // $[Timer Initialization]
 323   1              // Save Timer Configuration
 324   1              uint8_t TMR2CN0_TR2_save;
 325   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 326   1              // Stop Timer
 327   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 328   1              // [Timer Initialization]$
 329   1      
 330   1              // $[TMR2CN0 - Timer 2 Control]
 331   1              // [TMR2CN0 - Timer 2 Control]$
 332   1      
 333   1              // $[TMR2H - Timer 2 High Byte]
 334   1              // [TMR2H - Timer 2 High Byte]$
 335   1      
 336   1              // $[TMR2L - Timer 2 Low Byte]
 337   1              // [TMR2L - Timer 2 Low Byte]$
 338   1      
 339   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 340   1              /***********************************************************************
 341   1               - Timer 2 Reload High Byte = 0xF9
 342   1               ***********************************************************************/
 343   1              TMR2RLH = (0xF9 << TMR2RLH_TMR2RLH__SHIFT);
 344   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 345   1      
 346   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 347   1              /***********************************************************************
 348   1               - Timer 2 Reload Low Byte = 0xC0
 349   1               ***********************************************************************/
 350   1              TMR2RLL = (0xC0 << TMR2RLL_TMR2RLL__SHIFT);
 351   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 352   1      
 353   1              // $[TMR2CN0]
 354   1              // [TMR2CN0]$
 355   1      
 356   1              // $[Timer Restoration]
 357   1              // Restore Timer Configuration
 358   1              TMR2CN0 |= TMR2CN0_TR2_save;
 359   1              // [Timer Restoration]$
 360   1      
 361   1      }
 362          
 363          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 364   1              // $[CKCON0 - Clock Control 0]
 365   1              /***********************************************************************
 366   1               - System clock divided by 4
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 7   

 367   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 368   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 369   1               - Timer 2 low byte uses the system clock
 370   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 371   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 372   1               - Timer 1 uses the clock defined by the prescale field, SCA
 373   1               ***********************************************************************/
 374   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__PRESCALE
 375   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__SYSCLK
 376   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 377   1                              | CKCON0_T1M__PRESCALE;
 378   1              // [CKCON0 - Clock Control 0]$
 379   1      
 380   1              // $[TMOD - Timer 0/1 Mode]
 381   1              /***********************************************************************
 382   1               - Mode 1, 16-bit Counter/Timer
 383   1               - Mode 0, 13-bit Counter/Timer
 384   1               - Timer Mode
 385   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 386   1               - Timer Mode
 387   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 388   1               ***********************************************************************/
 389   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 390   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 391   1              // [TMOD - Timer 0/1 Mode]$
 392   1      
 393   1              // $[TCON - Timer 0/1 Control]
 394   1              // [TCON - Timer 0/1 Control]$
 395   1      
 396   1      }
 397          
 398          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 399   1              // $[EIE1 - Extended Interrupt Enable 1]
 400   1              /***********************************************************************
 401   1               - Disable ADC0 Conversion Complete interrupt
 402   1               - Disable ADC0 Window Comparison interrupt
 403   1               - Disable CP0 interrupts
 404   1               - Disable CP1 interrupts
 405   1               - Disable all Port Match interrupts
 406   1               - Enable interrupt requests generated by PCA0
 407   1               - Disable all SMB0 interrupts
 408   1               - Disable Timer 3 interrupts
 409   1               ***********************************************************************/
 410   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 411   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__ENABLED
 412   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 413   1              // [EIE1 - Extended Interrupt Enable 1]$
 414   1      
 415   1              // $[EIP1 - Extended Interrupt Priority 1]
 416   1              // [EIP1 - Extended Interrupt Priority 1]$
 417   1      
 418   1              // $[IE - Interrupt Enable]
 419   1              /***********************************************************************
 420   1               - Enable each interrupt according to its individual mask setting
 421   1               - Disable external interrupt 0
 422   1               - Disable external interrupt 1
 423   1               - Disable all SPI0 interrupts
 424   1               - Enable interrupt requests generated by the TF0 flag
 425   1               - Disable all Timer 1 interrupt
 426   1               - Disable Timer 2 interrupt
 427   1               - Disable UART0 interrupt
 428   1               ***********************************************************************/
 429   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 8   

 430   1                              | IE_ESPI0__DISABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 431   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 432   1              // [IE - Interrupt Enable]$
 433   1      
 434   1              // $[IP - Interrupt Priority]
 435   1              // [IP - Interrupt Priority]$
 436   1      
 437   1      }
 438          
 439          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 440   1              // $[PCA0 Settings Save]
 441   1              // Select Capture/Compare register)
 442   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 443   1              // [PCA0 Settings Save]$
 444   1      
 445   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 446   1              /***********************************************************************
 447   1               - Disable negative edge capture
 448   1               - Enable a Capture/Compare Flag interrupt request when CCF1 is set
 449   1               - Enable match function
 450   1               - 8 to 11-bit PWM selected
 451   1               - Disable positive edge capture
 452   1               - Enable comparator function
 453   1               - Disable PWM function
 454   1               - Disable toggle function
 455   1               ***********************************************************************/
 456   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__ENABLED
 457   1                              | PCA0CPM1_MAT__ENABLED | PCA0CPM1_PWM16__8_BIT
 458   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 459   1                              | PCA0CPM1_PWM__DISABLED | PCA0CPM1_TOG__DISABLED;
 460   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 461   1      
 462   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 463   1              /***********************************************************************
 464   1               - PCA Channel 1 Capture Module Low Byte = 0xAE
 465   1               ***********************************************************************/
 466   1              PCA0CPL1 = (0xAE << PCA0CPL1_PCA0CPL1__SHIFT);
 467   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 468   1      
 469   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 470   1              /***********************************************************************
 471   1               - PCA Channel 1 Capture Module High Byte = 0x01
 472   1               ***********************************************************************/
 473   1              PCA0CPH1 = (0x01 << PCA0CPH1_PCA0CPH1__SHIFT);
 474   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 475   1      
 476   1              // $[Auto-reload]
 477   1              // [Auto-reload]$
 478   1      
 479   1              // $[PCA0 Settings Restore]
 480   1              // [PCA0 Settings Restore]$
 481   1      
 482   1      }
 483          
 484          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 485   1              // $[PCA0 Settings Save]
 486   1              // Select Capture/Compare register)
 487   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 488   1              // [PCA0 Settings Save]$
 489   1      
 490   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 491   1              /***********************************************************************
 492   1               - Disable negative edge capture
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 9   

 493   1               - Enable a Capture/Compare Flag interrupt request when CCF2 is set
 494   1               - Enable match function
 495   1               - 8 to 11-bit PWM selected
 496   1               - Disable positive edge capture
 497   1               - Enable comparator function
 498   1               - Disable PWM function
 499   1               - Disable toggle function
 500   1               ***********************************************************************/
 501   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__ENABLED
 502   1                              | PCA0CPM2_MAT__ENABLED | PCA0CPM2_PWM16__8_BIT
 503   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__ENABLED
 504   1                              | PCA0CPM2_PWM__DISABLED | PCA0CPM2_TOG__DISABLED;
 505   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 506   1      
 507   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 508   1              /***********************************************************************
 509   1               - PCA Channel 2 Capture Module Low Byte = 0xD6
 510   1               ***********************************************************************/
 511   1              PCA0CPL2 = (0xD6 << PCA0CPL2_PCA0CPL2__SHIFT);
 512   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 513   1      
 514   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 515   1              /***********************************************************************
 516   1               - PCA Channel 2 Capture Module High Byte = 0x01
 517   1               ***********************************************************************/
 518   1              PCA0CPH2 = (0x01 << PCA0CPH2_PCA0CPH2__SHIFT);
 519   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 520   1      
 521   1              // $[Auto-reload]
 522   1              // [Auto-reload]$
 523   1      
 524   1              // $[PCA0 Settings Restore]
 525   1              // [PCA0 Settings Restore]$
 526   1      
 527   1      }
 528          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 10  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 24
0000 120000      R     LCALL   WDT_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 25
0003 120000      R     LCALL   PORTS_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 26
0006 120000      R     LCALL   PORTS_1_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 27
0009 120000      R     LCALL   PBCFG_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 28
000C 120000      R     LCALL   CLOCK_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 29
000F 120000      R     LCALL   TIMER01_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 30
0012 120000      R     LCALL   TIMER16_2_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 31
0015 120000      R     LCALL   TIMER_SETUP_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 32
0018 120000      R     LCALL   PCA_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 33
001B 120000      R     LCALL   PCACH_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 34
001E 120000      R     LCALL   PCACH_1_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 35
0021 120000      R     LCALL   PCACH_2_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 36
0024 120000      R     LCALL   SPI_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 37
0027 020000      R     LJMP    INTERRUPT_0_enter_DefaultMode_from_RESET
             ; FUNCTION enter_DefaultMode_from_RESET (END)

             ; FUNCTION WDT_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 45
0000 7597DE            MOV     WDTCN,#0DEH
                                           ; SOURCE LINE # 46
0003 7597AD            MOV     WDTCN,#0ADH
                                           ; SOURCE LINE # 49
0006 22                RET     
             ; FUNCTION WDT_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 66
0000 75A495            MOV     P0MDOUT,#095H
                                           ; SOURCE LINE # 86
0003 75D4F8            MOV     P0SKIP,#0F8H
                                           ; SOURCE LINE # 97
0006 22                RET     
             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 116
0000 75D50F            MOV     P1SKIP,#0FH
                                           ; SOURCE LINE # 126
0003 22                RET     
             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (END)

C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 11  

             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 134
0000 75E3C0            MOV     XBR2,#0C0H
                                           ; SOURCE LINE # 151
0003 75E102            MOV     XBR0,#02H
                                           ; SOURCE LINE # 159
0006 22                RET     
             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 167
0000 75A901            MOV     CLKSEL,#01H
                                           ; SOURCE LINE # 170
0003 22                RET     
             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCA_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 174
0000 C2DE              CLR     PCA0CN0_CR
                                           ; SOURCE LINE # 184
0002 75D902            MOV     PCA0MD,#02H
                                           ; SOURCE LINE # 207
0005 D2DE              SETB    PCA0CN0_CR
                                           ; SOURCE LINE # 210
0007 22                RET     
             ; FUNCTION PCA_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 215
0000 53F77F            ANL     PCA0PWM,#07FH
                                           ; SOURCE LINE # 229
0003 75DA49            MOV     PCA0CPM0,#049H
                                           ; SOURCE LINE # 239
0006 75FB90            MOV     PCA0CPL0,#090H
                                           ; SOURCE LINE # 246
0009 75FC01            MOV     PCA0CPH0,#01H
                                           ; SOURCE LINE # 255
000C 22                RET     
             ; FUNCTION PCACH_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION SPI_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 262
0000 75A207            MOV     SPI0CKR,#07H
                                           ; SOURCE LINE # 269
0003 43A140            ORL     SPI0CFG,#040H
                                           ; SOURCE LINE # 277
0006 53F8F3            ANL     SPI0CN0,#0F3H
                                           ; SOURCE LINE # 278
0009 43F801            ORL     SPI0CN0,#01H
                                           ; SOURCE LINE # 281
000C 22                RET     
             ; FUNCTION SPI_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 287
;---- Variable 'TCON_save' assigned to Register 'R7' ----
0000 AF88              MOV     R7,TCON
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 12  

                                           ; SOURCE LINE # 289
0002 5388AF            ANL     TCON,#0AFH
                                           ; SOURCE LINE # 297
0005 758CFE            MOV     TH0,#0FEH
                                           ; SOURCE LINE # 304
0008 758A70            MOV     TL0,#070H
                                           ; SOURCE LINE # 315
000B EF                MOV     A,R7
000C 5440              ANL     A,#040H
000E FE                MOV     R6,A
000F EF                MOV     A,R7
0010 5410              ANL     A,#010H
0012 4E                ORL     A,R6
0013 4288              ORL     TCON,A
                                           ; SOURCE LINE # 319
0015 22                RET     
             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER16_2_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 321
                                           ; SOURCE LINE # 325
0000 E5C8              MOV     A,TMR2CN0
0002 5404              ANL     A,#04H
;---- Variable 'TMR2CN0_TR2_save' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 327
0004 53C8FB            ANL     TMR2CN0,#0FBH
                                           ; SOURCE LINE # 343
0007 75CBF9            MOV     TMR2RLH,#0F9H
                                           ; SOURCE LINE # 350
000A 75CAC0            MOV     TMR2RLL,#0C0H
                                           ; SOURCE LINE # 358
000D 42C8              ORL     TMR2CN0,A
                                           ; SOURCE LINE # 361
000F 22                RET     
             ; FUNCTION TIMER16_2_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 374
0000 758E11            MOV     CKCON0,#011H
                                           ; SOURCE LINE # 389
0003 758901            MOV     TMOD,#01H
                                           ; SOURCE LINE # 396
0006 22                RET     
             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 398
                                           ; SOURCE LINE # 410
0000 75E610            MOV     EIE1,#010H
                                           ; SOURCE LINE # 429
0003 75A882            MOV     IE,#082H
                                           ; SOURCE LINE # 437
0006 22                RET     
             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 439
                                           ; SOURCE LINE # 442
0000 53F77F            ANL     PCA0PWM,#07FH
                                           ; SOURCE LINE # 456
0003 75DB49            MOV     PCA0CPM1,#049H
                                           ; SOURCE LINE # 466
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/03/2018 16:51:57 PAGE 13  

0006 75E9AE            MOV     PCA0CPL1,#0AEH
                                           ; SOURCE LINE # 473
0009 75EA01            MOV     PCA0CPH1,#01H
                                           ; SOURCE LINE # 482
000C 22                RET     
             ; FUNCTION PCACH_1_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_2_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 484
                                           ; SOURCE LINE # 487
0000 53F77F            ANL     PCA0PWM,#07FH
                                           ; SOURCE LINE # 501
0003 75DC49            MOV     PCA0CPM2,#049H
                                           ; SOURCE LINE # 511
0006 75EBD6            MOV     PCA0CPL2,#0D6H
                                           ; SOURCE LINE # 518
0009 75EC01            MOV     PCA0CPH2,#01H
                                           ; SOURCE LINE # 527
000C 22                RET     
             ; FUNCTION PCACH_2_enter_DefaultMode_from_RESET (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    183    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
